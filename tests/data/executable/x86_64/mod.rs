use byteorder::LittleEndian;
use elf_utils::Elf64;
use elf_utils::ElfArch;
use elf_utils::ElfABI;
use elf_utils::ElfHdrData;
use elf_utils::ElfKind;
use elf_utils::ElfTable;
use elf_utils::dynamic::DynamicEntData;
use elf_utils::note::NoteData;
use elf_utils::prog_hdr::ProgHdrData;
use elf_utils::prog_hdr::Segment;
use elf_utils::reloc::x86_64::X86_64Reloc;
use elf_utils::section_hdr::SectionHdrData;
use elf_utils::section_hdr::SectionPos;
use elf_utils::section_hdr::SymsStrs;
use elf_utils::symtab::SymBase;
use elf_utils::symtab::SymBind;
use elf_utils::symtab::SymData;
use elf_utils::symtab::SymKind;
use std::marker::PhantomData;

pub const PATH: &'static str = "tests/data/executable/x86_64/ps";

const NUM_PROG_HDRS: usize = 11;

pub const PROG_HDR_CONTENTS: [ProgHdrData<Elf64, Segment<u64>,
                                          Segment<u64>, Segment<u64>>;
                          NUM_PROG_HDRS] = [
    ProgHdrData::ProgHdr { virt_addr: 0x200040, phys_addr: 0x200040,
                           content: Segment { offset: 0x40, size: 0x268 } },
    ProgHdrData::Interp { virt_addr: 0x2002a8, phys_addr: 0x2002a8,
                          str: Segment { offset: 0x2a8, size: 0x15 } },
    ProgHdrData::Load { virt_addr: 0x200000, phys_addr: 0x200000,
                        mem_size: 0x39b4, align: 0x1000,
                        read: true, write: false, exec: false,
                        content: Segment { offset: 0, size: 0x39b4 } },
    ProgHdrData::Load { virt_addr: 0x2049c0, phys_addr: 0x2049c0,
                        mem_size: 0x4d10, align: 0x1000,
                        read: true, write: false, exec: true,
                        content: Segment { offset: 0x39c0, size: 0x4d10 } },
    ProgHdrData::Load { virt_addr: 0x20a6d0, phys_addr: 0x20a6d0,
                        mem_size: 0x1f8, align: 4096,
                        read: true, write: true, exec: false,
                        content: Segment { offset: 0x86d0, size: 0x1f8 } },
    ProgHdrData::Load { virt_addr: 0x20b8d0, phys_addr: 0x20b8d0,
                        mem_size: 0x283c, align: 4096,
                        read: true, write: true, exec: false,
                        content: Segment { offset: 0x88d0, size: 0x2710 } },
    ProgHdrData::Dynamic { virt_addr: 0x20a700, phys_addr: 0x20a700,
                           content: Segment { offset: 0x8700, size: 0x1c0 } },
    ProgHdrData::Unknown { tag: 0x6474e552, flags: 4, offset: 0x86d0,
                           file_size: 0x1f8, mem_size: 0x1f8,
                           phys_addr: 0x20a6d0, virt_addr: 0x20a6d0, align: 1 },
    ProgHdrData::Unknown { tag: 0x6474e550, flags: 4, offset: 0x2ea0,
                           file_size: 0x1d4, mem_size: 0x1d4,
                           phys_addr: 0x202ea0, virt_addr: 0x202ea0, align: 4 },
    ProgHdrData::Unknown { tag: 0x6474e551, flags: 6, offset: 0,
                           file_size: 0, mem_size: 0,
                           phys_addr: 0, virt_addr: 0, align: 0 },
    ProgHdrData::Note { virt_addr: 0x2002c0, phys_addr: 0x2002c0,
                        content: Segment { offset: 0x2c0, size: 0x48 } },
];

const NUM_SECTION_HDRS: usize = 30;

pub const SECTION_HDR_CONTENTS_BARE: [SectionHdrData<Elf64, u32, u32, u32, u32,
                                                     SectionPos<u64>,
                                                     SectionPos<u64>,
                                                     SectionPos<u64>,
                                                     SectionPos<u64>,
                                                     SectionPos<u64>,
                                                     SectionPos<u64>,
                                                     SectionPos<u64>,
                                                     SectionPos<u64>>;
                                      NUM_SECTION_HDRS] = [
    SectionHdrData::Null,
    SectionHdrData::ProgBits { name: 12, addr: 0x2002a8, align: 1,
                               data: SectionPos { offset: 0x2a8, size: 0x15 },
                               alloc: true, write: false, exec: false },
    SectionHdrData::Note { name: 20, addr: 0x2002c0, align: 4,
                           note: SectionPos { offset: 0x2c0, size: 0x48 },
                           alloc: true, write: false, exec: false },
    SectionHdrData::Dynsym { name: 30, addr: 0x200308, align: 8,
                             syms: SectionPos { offset: 0x308, size: 0x8e8 },
                             strtab: 8, local_end: 1,
                             alloc: true, write: false, exec: false },
    SectionHdrData::Unknown { name: 38, tag: 0x6fffffff,
                              addr: 0x200bf0, align: 2, offset: 0xbf0,
                              size: 0xbe, ent_size: 2, link: 3, info: 0,
                              flags: 0x2 },
    SectionHdrData::Unknown { name: 51, tag: 0x6ffffffe,
                              addr: 0x200cb0, align: 4, offset: 0xcb0,
                              size: 0x60, ent_size: 0, link: 8, info: 2,
                              flags: 0x2 },
    SectionHdrData::Unknown { name: 66, tag: 0x6ffffff6,
                              addr: 0x200d10, align: 8, offset: 0xd10,
                              size: 0x48, ent_size: 0, link: 3, info: 0,
                              flags: 0x2 },
    SectionHdrData::Hash { name: 76, addr: 0x200d58, align: 4,
                           hash: SectionPos { offset: 0xd58, size: 0x300 },
                           symtab: 3, alloc: true, write: false, exec: false },
    SectionHdrData::Strtab { name: 82, addr: 0x201058, align: 1,
                             strs: SectionPos { offset: 0x1058, size: 0x3ed } },
    SectionHdrData::Rela { name: 90, addr: 0x201448, align: 8,
                           relas: SectionPos { offset: 0x1448, size: 0x90 },
                           symtab: 3, target: 0, alloc: true, write: false,
                           exec: false },
    SectionHdrData::Rela { name: 100, addr: 0x2014d8, align: 8,
                           relas: SectionPos { offset: 0x14d8, size: 0x7f8 },
                           symtab: 3, target: 25, alloc: true, write: false,
                           exec: false },
    SectionHdrData::ProgBits { name: 110, addr: 0x201cd0, align: 16,
                               data: SectionPos { offset: 0x1cd0,
                                                  size: 0x11d0 },
                               alloc: true, write: false, exec: false },
    SectionHdrData::ProgBits { name: 118, addr: 0x202ea0, align: 4,
                               data: SectionPos { offset: 0x2ea0, size: 0x1d4 },
                               alloc: true, write: false, exec: false },
    SectionHdrData::ProgBits { name: 132, addr: 0x203078, align: 8,
                               data: SectionPos { offset: 0x3078, size: 0x93c },
                               alloc: true, write: false, exec: false },
    SectionHdrData::ProgBits { name: 142, addr: 0x2049c0, align: 16,
                               data: SectionPos { offset: 0x39c0,
                                                  size: 0x478c },
                               alloc: true, write: false, exec: true },
    SectionHdrData::ProgBits { name: 148, addr: 0x20914c, align: 4,
                               data: SectionPos { offset: 0x814c, size: 0xe },
                               alloc: true, write: false, exec: true },
    SectionHdrData::ProgBits { name: 154, addr: 0x20915c, align: 4,
                               data: SectionPos { offset: 0x815c, size: 0xe },
                               alloc: true, write: false, exec: true },
    SectionHdrData::ProgBits { name: 160, addr: 0x209170, align: 16,
                               data: SectionPos { offset: 0x8170, size: 0x560 },
                               alloc: true, write: false, exec: true },
    SectionHdrData::ProgBits { name: 165, addr: 0x20a6d0, align: 8,
                               data: SectionPos { offset: 0x86d0, size: 0x10 },
                               alloc: true, write: true, exec: false },
    SectionHdrData::ProgBits { name: 172, addr: 0x20a6e0, align: 8,
                               data: SectionPos { offset: 0x86e0, size: 0x10 },
                               alloc: true, write: true, exec: false },
    SectionHdrData::ProgBits { name: 179, addr: 0x20a6f0, align: 8,
                               data: SectionPos { offset: 0x86f0, size: 0x8 },
                               alloc: true, write: true, exec: false },
    SectionHdrData::Unknown { name: 184, tag: 14, addr: 0x20a6f8,
                              align: 8, offset: 0x86f8, size: 8, ent_size: 0,
                              link: 0, info: 0, flags: 0x3 },
    SectionHdrData::Dynamic { name: 196, addr: 0x20a700, align: 8,
                              strtab: 8, dynamic: SectionPos { offset: 0x8700,
                                                               size: 0x1c0 },
                              alloc: true, write: true, exec: false },
    SectionHdrData::ProgBits { name: 205, addr: 0x20a8c0, align: 8,
                               data: SectionPos { offset: 0x88c0, size: 0x8 },
                               alloc: true, write: true, exec: false },
    SectionHdrData::ProgBits { name: 210, addr: 0x20b8d0, align: 16,
                               data: SectionPos { offset: 0x88d0,
                                                  size: 0x244a },
                               alloc: true, write: true, exec: false },
    SectionHdrData::ProgBits { name: 216, addr: 0x20dd20, align: 8,
                               data: SectionPos { offset: 0xad20, size: 0x2c0 },
                               alloc: true, write: true, exec: false },
    SectionHdrData::Nobits { name: 225, addr: 0x20e000, align: 64,
                             offset: 0xafe0, size: 0x10c, alloc: true,
                             write: true, exec: false },
    SectionHdrData::ProgBits { name: 230, addr: 0, align: 1,
                               data: SectionPos { offset: 0xafe0, size: 0x4dc },
                               alloc: false, write: false, exec: false },
    SectionHdrData::ProgBits { name: 239, addr: 0, align: 1,
                               data: SectionPos { offset: 0xb4bc, size: 0x10 },
                               alloc: false, write: false, exec: false },
    SectionHdrData::Strtab { name: 2, addr: 0, align: 1,
                             strs: SectionPos { offset: 0xb4cc, size: 0xfe } }
];

pub const SECTION_HDR_CONTENTS_STRS: [SectionHdrData<Elf64, &'static str,
                                                     u32, u32, u32,
                                                     SectionPos<u64>,
                                                     SectionPos<u64>,
                                                     SectionPos<u64>,
                                                     SectionPos<u64>,
                                                     SectionPos<u64>,
                                                     SectionPos<u64>,
                                                     SectionPos<u64>,
                                                     SectionPos<u64>>;
                                      NUM_SECTION_HDRS] = [
    SectionHdrData::Null,
    SectionHdrData::ProgBits { name: ".interp", addr: 0x2002a8, align: 1,
                               data: SectionPos { offset: 0x2a8, size: 0x15 },
                               alloc: true, write: false, exec: false },
    SectionHdrData::Note { name: ".note.tag", addr: 0x2002c0, align: 4,
                           note: SectionPos { offset: 0x2c0, size: 0x48 },
                           alloc: true, write: false, exec: false },
    SectionHdrData::Dynsym { name: ".dynsym", addr: 0x200308, align: 8,
                             syms: SectionPos { offset: 0x308, size: 0x8e8 },
                             strtab: 8, local_end: 1,
                             alloc: true, write: false, exec: false },
    SectionHdrData::Unknown { name: ".gnu.version", tag: 0x6fffffff,
                              addr: 0x200bf0, align: 2, offset: 0xbf0,
                              size: 0xbe, ent_size: 2, link: 3, info: 0,
                              flags: 0x2 },
    SectionHdrData::Unknown { name: ".gnu.version_r", tag: 0x6ffffffe,
                              addr: 0x200cb0, align: 4, offset: 0xcb0,
                              size: 0x60, ent_size: 0, link: 8, info: 2,
                              flags: 0x2 },
    SectionHdrData::Unknown { name: ".gnu.hash", tag: 0x6ffffff6,
                              addr: 0x200d10, align: 8, offset: 0xd10,
                              size: 0x48, ent_size: 0, link: 3, info: 0,
                              flags: 0x2 },
    SectionHdrData::Hash { name: ".hash", addr: 0x200d58, align: 4,
                           hash: SectionPos { offset: 0xd58, size: 0x300 },
                           symtab: 3, alloc: true, write: false, exec: false },
    SectionHdrData::Strtab { name: ".dynstr", addr: 0x201058, align: 1,
                             strs: SectionPos { offset: 0x1058, size: 0x3ed } },
    SectionHdrData::Rela { name: ".rela.dyn", addr: 0x201448, align: 8,
                           relas: SectionPos { offset: 0x1448, size: 0x90 },
                           symtab: 3, target: 0, alloc: true, write: false,
                           exec: false },
    SectionHdrData::Rela { name: ".rela.plt", addr: 0x2014d8, align: 8,
                           relas: SectionPos { offset: 0x14d8, size: 0x7f8 },
                           symtab: 3, target: 25, alloc: true, write: false,
                           exec: false },
    SectionHdrData::ProgBits { name: ".rodata", addr: 0x201cd0, align: 16,
                               data: SectionPos { offset: 0x1cd0,
                                                  size: 0x11d0 },
                               alloc: true, write: false, exec: false },
    SectionHdrData::ProgBits { name: ".eh_frame_hdr", addr: 0x202ea0, align: 4,
                               data: SectionPos { offset: 0x2ea0, size: 0x1d4 },
                               alloc: true, write: false, exec: false },
    SectionHdrData::ProgBits { name: ".eh_frame", addr: 0x203078, align: 8,
                               data: SectionPos { offset: 0x3078, size: 0x93c },
                               alloc: true, write: false, exec: false },
    SectionHdrData::ProgBits { name: ".text", addr: 0x2049c0, align: 16,
                               data: SectionPos { offset: 0x39c0,
                                                  size: 0x478c },
                               alloc: true, write: false, exec: true },
    SectionHdrData::ProgBits { name: ".init", addr: 0x20914c, align: 4,
                               data: SectionPos { offset: 0x814c, size: 0xe },
                               alloc: true, write: false, exec: true },
    SectionHdrData::ProgBits { name: ".fini", addr: 0x20915c, align: 4,
                               data: SectionPos { offset: 0x815c, size: 0xe },
                               alloc: true, write: false, exec: true },
    SectionHdrData::ProgBits { name: ".plt", addr: 0x209170, align: 16,
                               data: SectionPos { offset: 0x8170, size: 0x560 },
                               alloc: true, write: false, exec: true },
    SectionHdrData::ProgBits { name: ".ctors", addr: 0x20a6d0, align: 8,
                               data: SectionPos { offset: 0x86d0, size: 0x10 },
                               alloc: true, write: true, exec: false },
    SectionHdrData::ProgBits { name: ".dtors", addr: 0x20a6e0, align: 8,
                               data: SectionPos { offset: 0x86e0, size: 0x10 },
                               alloc: true, write: true, exec: false },
    SectionHdrData::ProgBits { name: ".jcr", addr: 0x20a6f0, align: 8,
                               data: SectionPos { offset: 0x86f0, size: 8 },
                               alloc: true, write: true, exec: false },
    SectionHdrData::Unknown { name: ".init_array", tag: 14, addr: 0x20a6f8,
                              align: 8, offset: 0x86f8, size: 8, ent_size: 0,
                              link: 0, info: 0, flags: 0x3 },
    SectionHdrData::Dynamic { name: ".dynamic", addr: 0x20a700, align: 8,
                              strtab: 8, dynamic: SectionPos { offset: 0x8700,
                                                               size: 0x1c0 },
                              alloc: true, write: true, exec: false },
    SectionHdrData::ProgBits { name: ".got", addr: 0x20a8c0, align: 8,
                               data: SectionPos { offset: 0x88c0, size: 0x8 },
                               alloc: true, write: true, exec: false },
    SectionHdrData::ProgBits { name: ".data", addr: 0x20b8d0, align: 16,
                               data: SectionPos { offset: 0x88d0,
                                                  size: 0x244a },
                               alloc: true, write: true, exec: false },
    SectionHdrData::ProgBits { name: ".got.plt", addr: 0x20dd20, align: 8,
                               data: SectionPos { offset: 0xad20, size: 0x2c0 },
                               alloc: true, write: true, exec: false },
    SectionHdrData::Nobits { name: ".bss", addr: 0x20e000, align: 64,
                             offset: 0xafe0, size: 0x10c, alloc: true,
                             write: true, exec: false },
    SectionHdrData::ProgBits { name: ".comment", addr: 0, align: 1,
                               data: SectionPos { offset: 0xafe0, size: 0x4dc },
                               alloc: false, write: false, exec: false },
    SectionHdrData::ProgBits { name: ".gnu_debuglink", addr: 0, align: 1,
                               data: SectionPos { offset: 0xb4bc, size: 0x10 },
                               alloc: false, write: false, exec: false },
    SectionHdrData::Strtab { name: ".shstrtab", addr: 0, align: 1,
                             strs: SectionPos { offset: 0xb4cc, size: 0xfe } }
];

pub const HEADER_DATA: ElfHdrData<LittleEndian, Elf64, ElfTable<Elf64>,
                                  ElfTable<Elf64>, u16> =
    ElfHdrData {
        byteorder: PhantomData, abi: ElfABI::FreeBSD, abi_version: 0,
        kind: ElfKind::Executable, arch: ElfArch::X86_64,
        entry: 0x2049c0, flags: 0, section_hdr_strtab: 29,
        prog_hdrs: Some(ElfTable { offset: 64, num_ents: 11 }),
        section_hdrs: ElfTable { offset: 46544, num_ents: 30 }
    };
const NUM_NOTES: usize = 3;

const NOTE_1_NAME: [u8; 8] = [
    0x46, 0x72, 0x65, 0x65, 0x42, 0x53, 0x44, 0x00
];
const NOTE_1_DESC: [u8; 4] = [
    0xa2, 0xd6, 0x13, 0x00
];
const NOTE_2_NAME: [u8; 8] = [
    0x46, 0x72, 0x65, 0x65, 0x42, 0x53, 0x44, 0x00
];
const NOTE_2_DESC: [u8; 4] = [
    0x00, 0x00, 0x00, 0x00
];
const NOTE_3_NAME: [u8; 8] = [
    0x46, 0x72, 0x65, 0x65, 0x42, 0x53, 0x44, 0x00
];
const NOTE_3_DESC: [u8; 4] = [
    0x00, 0x00, 0x00, 0x00
];

pub const NOTES_CONTENTS: [NoteData<'static>; NUM_NOTES] = [
    NoteData { kind: 1, name: &NOTE_1_NAME, desc: &NOTE_1_DESC },
    NoteData { kind: 4, name: &NOTE_2_NAME, desc: &NOTE_2_DESC },
    NoteData { kind: 2, name: &NOTE_3_NAME, desc: &NOTE_3_DESC },
];

const DYNSYM_NUM_SYMS: usize = 95;

pub const DYNSYM_CONTENTS: [SymData<&'static str, u16, Elf64>;
                            DYNSYM_NUM_SYMS] = [
    SymData { name: None, value: 0, size: 0, kind: SymKind::None,
              bind: SymBind::Local, section: SymBase::Undef },
    SymData { name: Some("_init_tls"), value: 0, size: 0,
              kind: SymKind::Function, bind: SymBind::Global,
              section: SymBase::Undef },
    SymData { name: Some("atexit"), value: 0, size: 0, kind: SymKind::Function,
              bind: SymBind::Global, section: SymBase::Undef },
    SymData { name: Some("exit"), value: 0, size: 0, kind: SymKind::Function,
              bind: SymBind::Global, section: SymBase::Undef },
    SymData { name: Some("_Jv_RegisterClasses"), value: 0, size: 0,
              kind: SymKind::None, bind: SymBind::Weak,
              section: SymBase::Undef },
    SymData { name: Some("__stack_chk_fail"), value: 0, size: 0,
              kind: SymKind::Function, bind: SymBind::Global,
              section: SymBase::Undef },
    SymData { name: Some("asprintf"), value: 0, size: 0,
              kind: SymKind::Function, bind: SymBind::Global,
              section: SymBase::Undef },
    SymData { name: Some("errx"), value: 0, size: 0,
              kind: SymKind::Function, bind: SymBind::Global,
              section: SymBase::Undef },
    SymData { name: Some("free"), value: 0, size: 0,
              kind: SymKind::Function, bind: SymBind::Global,
              section: SymBase::Undef },
    SymData { name: Some("malloc"), value: 0, size: 0,
              kind: SymKind::Function, bind: SymBind::Global,
              section: SymBase::Undef },
    SymData { name: Some("sprintf"), value: 0, size: 0,
              kind: SymKind::Function, bind: SymBind::Global,
              section: SymBase::Undef },
    SymData { name: Some("strcpy"), value: 0, size: 0,
              kind: SymKind::Function, bind: SymBind::Global,
              section: SymBase::Undef },
    SymData { name: Some("strlen"), value: 0, size: 0,
              kind: SymKind::Function, bind: SymBind::Global,
              section: SymBase::Undef },
    SymData { name: Some("strncmp"), value: 0, size: 0,
              kind: SymKind::Function, bind: SymBind::Global,
              section: SymBase::Undef },
    SymData { name: Some("strrchr"), value: 0, size: 0,
              kind: SymKind::Function, bind: SymBind::Global,
              section: SymBase::Undef },
    SymData { name: Some("strvisx"), value: 0, size: 0,
              kind: SymKind::Function, bind: SymBind::Global,
              section: SymBase::Undef },
    SymData { name: Some("sysconf"), value: 0, size: 0,
              kind: SymKind::Function, bind: SymBind::Global,
              section: SymBase::Undef },
    SymData { name: Some("bsearch"), value: 0, size: 0,
              kind: SymKind::Function, bind: SymBind::Global,
              section: SymBase::Undef },
    SymData { name: Some("snprintf"), value: 0, size: 0,
              kind: SymKind::Function, bind: SymBind::Global,
              section: SymBase::Undef },
    SymData { name: Some("strchr"), value: 0, size: 0,
              kind: SymKind::Function, bind: SymBind::Global,
              section: SymBase::Undef },
    SymData { name: Some("strcmp"), value: 0, size: 0,
              kind: SymKind::Function, bind: SymBind::Global,
              section: SymBase::Undef },
    SymData { name: Some("strcspn"), value: 0, size: 0,
              kind: SymKind::Function, bind: SymBind::Global,
              section: SymBase::Undef },
    SymData { name: Some("strdup"), value: 0, size: 0,
              kind: SymKind::Function, bind: SymBind::Global,
              section: SymBase::Undef },
    SymData { name: Some("strsep"), value: 0, size: 0,
              kind: SymKind::Function, bind: SymBind::Global,
              section: SymBase::Undef },
    SymData { name: Some("warnx"), value: 0, size: 0,
              kind: SymKind::Function, bind: SymBind::Global,
              section: SymBase::Undef },
    SymData { name: Some("xo_close_list"), value: 0, size: 0,
              kind: SymKind::Function, bind: SymBind::Global,
              section: SymBase::Undef },
    SymData { name: Some("xo_emit"), value: 0, size: 0,
              kind: SymKind::Function, bind: SymBind::Global,
              section: SymBase::Undef },
    SymData { name: Some("xo_finish"), value: 0, size: 0,
              kind: SymKind::Function, bind: SymBind::Global,
              section: SymBase::Undef },
    SymData { name: Some("xo_open_list"), value: 0, size: 0,
              kind: SymKind::Function, bind: SymBind::Global,
              section: SymBase::Undef },
    SymData { name: Some("sysctlbyname"), value: 0, size: 0,
              kind: SymKind::Function, bind: SymBind::Global,
              section: SymBase::Undef },
    SymData { name: Some("devname"), value: 0, size: 0,
              kind: SymKind::Function, bind: SymBind::Global,
              section: SymBase::Undef },
    SymData { name: Some("exp"), value: 0, size: 0,
              kind: SymKind::Function, bind: SymBind::Global,
              section: SymBase::Undef },
    SymData { name: Some("getpagesize"), value: 0, size: 0,
              kind: SymKind::Function, bind: SymBind::Global,
              section: SymBase::Undef },
    SymData { name: Some("group_from_gid"), value: 0, size: 0,
              kind: SymKind::Function, bind: SymBind::Global,
              section: SymBase::Undef },
    SymData { name: Some("jail_getname"), value: 0, size: 0,
              kind: SymKind::Function, bind: SymBind::Global,
              section: SymBase::Undef },
    SymData { name: Some("localeconv"), value: 0, size: 0,
              kind: SymKind::Function, bind: SymBind::Global,
              section: SymBase::Undef },
    SymData { name: Some("localtime"), value: 0, size: 0,
              kind: SymKind::Function, bind: SymBind::Global,
              section: SymBase::Undef },
    SymData { name: Some("log"), value: 0, size: 0,
              kind: SymKind::Function, bind: SymBind::Global,
              section: SymBase::Undef },
    SymData { name: Some("mac_free"), value: 0, size: 0,
              kind: SymKind::Function, bind: SymBind::Global,
              section: SymBase::Undef },
    SymData { name: Some("mac_get_pid"), value: 0, size: 0,
              kind: SymKind::Function, bind: SymBind::Global,
              section: SymBase::Undef },
    SymData { name: Some("mac_prepare_process_label"), value: 0, size: 0,
              kind: SymKind::Function, bind: SymBind::Global,
              section: SymBase::Undef },
    SymData { name: Some("mac_to_text"), value: 0, size: 0,
              kind: SymKind::Function, bind: SymBind::Global,
              section: SymBase::Undef },
    SymData { name: Some("strftime"), value: 0, size: 0,
              kind: SymKind::Function, bind: SymBind::Global,
              section: SymBase::Undef },
    SymData { name: Some("strvis"), value: 0, size: 0,
              kind: SymKind::Function, bind: SymBind::Global,
              section: SymBase::Undef },
    SymData { name: Some("user_from_uid"), value: 0, size: 0,
              kind: SymKind::Function, bind: SymBind::Global,
              section: SymBase::Undef },
    SymData { name: Some("xo_errx"), value: 0, size: 0,
              kind: SymKind::Function, bind: SymBind::Global,
              section: SymBase::Undef },
    SymData { name: Some("xo_warn"), value: 0, size: 0,
              kind: SymKind::Function, bind: SymBind::Global,
              section: SymBase::Undef },
    SymData { name: Some("_ThreadRuneLocale"), value: 0, size: 0,
              kind: SymKind::ThreadLocal, bind: SymBind::Global,
              section: SymBase::Undef },
    SymData { name: Some("__error"), value: 0, size: 0,
              kind: SymKind::Function, bind: SymBind::Global,
              section: SymBase::Undef },
    SymData { name: Some("atoi"), value: 0, size: 0,
              kind: SymKind::Function, bind: SymBind::Global,
              section: SymBase::Undef },
    SymData { name: Some("getenv"), value: 0, size: 0,
              kind: SymKind::Function, bind: SymBind::Global,
              section: SymBase::Undef },
    SymData { name: Some("getgid"), value: 0, size: 0,
              kind: SymKind::Function, bind: SymBind::Global,
              section: SymBase::Undef },
    SymData { name: Some("getgrgid"), value: 0, size: 0,
              kind: SymKind::Function, bind: SymBind::Global,
              section: SymBase::Undef },
    SymData { name: Some("getgrnam"), value: 0, size: 0,
              kind: SymKind::Function, bind: SymBind::Global,
              section: SymBase::Undef },
    SymData { name: Some("getopt"), value: 0, size: 0,
              kind: SymKind::Function, bind: SymBind::Global,
              section: SymBase::Undef },
    SymData { name: Some("getpwnam"), value: 0, size: 0,
              kind: SymKind::Function, bind: SymBind::Global,
              section: SymBase::Undef },
    SymData { name: Some("getpwuid"), value: 0, size: 0,
              kind: SymKind::Function, bind: SymBind::Global,
              section: SymBase::Undef },
    SymData { name: Some("getuid"), value: 0, size: 0,
              kind: SymKind::Function, bind: SymBind::Global,
              section: SymBase::Undef },
    SymData { name: Some("ioctl"), value: 0, size: 0,
              kind: SymKind::Function, bind: SymBind::Global,
              section: SymBase::Undef },
    SymData { name: Some("jail_getid"), value: 0, size: 0,
              kind: SymKind::Function, bind: SymBind::Global,
              section: SymBase::Undef },
    SymData { name: Some("kvm_getargv"), value: 0, size: 0,
              kind: SymKind::Function, bind: SymBind::Global,
              section: SymBase::Undef },
    SymData { name: Some("kvm_getenvv"), value: 0, size: 0,
              kind: SymKind::Function, bind: SymBind::Global,
              section: SymBase::Undef },
    SymData { name: Some("kvm_geterr"), value: 0, size: 0,
              kind: SymKind::Function, bind: SymBind::Global,
              section: SymBase::Undef },
    SymData { name: Some("kvm_getprocs"), value: 0, size: 0,
              kind: SymKind::Function, bind: SymBind::Global,
              section: SymBase::Undef },
    SymData { name: Some("kvm_openfiles"), value: 0, size: 0,
              kind: SymKind::Function, bind: SymBind::Global,
              section: SymBase::Undef },
    SymData { name: Some("memchr"), value: 0, size: 0,
              kind: SymKind::Function, bind: SymBind::Global,
              section: SymBase::Undef },
    SymData { name: Some("memcpy"), value: 0, size: 0,
              kind: SymKind::Function, bind: SymBind::Global,
              section: SymBase::Undef },
    SymData { name: Some("memmove"), value: 0, size: 0,
              kind: SymKind::Function, bind: SymBind::Global,
              section: SymBase::Undef },
    SymData { name: Some("memset"), value: 0, size: 0,
              kind: SymKind::Function, bind: SymBind::Global,
              section: SymBase::Undef },
    SymData { name: Some("qsort"), value: 0, size: 0,
              kind: SymKind::Function, bind: SymBind::Global,
              section: SymBase::Undef },
    SymData { name: Some("realloc"), value: 0, size: 0,
              kind: SymKind::Function, bind: SymBind::Global,
              section: SymBase::Undef },
    SymData { name: Some("setlocale"), value: 0, size: 0,
              kind: SymKind::Function, bind: SymBind::Global,
              section: SymBase::Undef },
    SymData { name: Some("stat"), value: 0, size: 0,
              kind: SymKind::Function, bind: SymBind::Global,
              section: SymBase::Undef },
    SymData { name: Some("strlcat"), value: 0, size: 0,
              kind: SymKind::Function, bind: SymBind::Global,
              section: SymBase::Undef },
    SymData { name: Some("strlcpy"), value: 0, size: 0,
              kind: SymKind::Function, bind: SymBind::Global,
              section: SymBase::Undef },
    SymData { name: Some("strtol"), value: 0, size: 0,
              kind: SymKind::Function, bind: SymBind::Global,
              section: SymBase::Undef },
    SymData { name: Some("strtoul"), value: 0, size: 0,
              kind: SymKind::Function, bind: SymBind::Global,
              section: SymBase::Undef },
    SymData { name: Some("time"), value: 0, size: 0,
              kind: SymKind::Function, bind: SymBind::Global,
              section: SymBase::Undef },
    SymData { name: Some("ttyname"), value: 0, size: 0,
              kind: SymKind::Function, bind: SymBind::Global,
              section: SymBase::Undef },
    SymData { name: Some("xo_close_container"), value: 0, size: 0,
              kind: SymKind::Function, bind: SymBind::Global,
              section: SymBase::Undef },
    SymData { name: Some("xo_close_instance"), value: 0, size: 0,
              kind: SymKind::Function, bind: SymBind::Global,
              section: SymBase::Undef },
    SymData { name: Some("xo_error"), value: 0, size: 0,
              kind: SymKind::Function, bind: SymBind::Global,
              section: SymBase::Undef },
    SymData { name: Some("xo_get_style"), value: 0, size: 0,
              kind: SymKind::Function, bind: SymBind::Global,
              section: SymBase::Undef },
    SymData { name: Some("xo_open_container"), value: 0, size: 0,
              kind: SymKind::Function, bind: SymBind::Global,
              section: SymBase::Undef },
    SymData { name: Some("xo_open_instance"), value: 0, size: 0,
              kind: SymKind::Function, bind: SymBind::Global,
              section: SymBase::Undef },
    SymData { name: Some("xo_parse_args"), value: 0, size: 0,
              kind: SymKind::Function, bind: SymBind::Global,
              section: SymBase::Undef },
    SymData { name: Some("xo_warnx"), value: 0, size: 0,
              kind: SymKind::Function, bind: SymBind::Global,
              section: SymBase::Undef },
    SymData { name: Some("__progname"), value: 0x20b8d0, size: 8,
              kind: SymKind::Object, bind: SymBind::Global,
              section: SymBase::Index(24) },
    SymData { name: Some("environ"), value: 0x20e000, size: 8,
              kind: SymKind::Object, bind: SymBind::Global,
              section: SymBase::Index(26) },
    SymData { name: Some("__stack_chk_guard"), value: 0x20e0a0, size: 64,
              kind: SymKind::Object, bind: SymBind::Global,
              section: SymBase::Index(26) },
    SymData { name: Some("__mb_sb_limit"), value: 0x20e0e0, size: 4,
              kind: SymKind::Object, bind: SymBind::Global,
              section: SymBase::Index(26) },
    SymData { name: Some("optarg"), value: 0x20e100, size: 8,
              kind: SymKind::Object, bind: SymBind::Global,
              section: SymBase::Index(26) },
    SymData { name: Some("uname"), value: 0x205b10, size: 29,
              kind: SymKind::Function, bind: SymBind::Global,
              section: SymBase::Index(14) },
    SymData { name: Some("_CurrentRuneLocale"), value: 0x20e0f0, size: 8,
              kind: SymKind::Object, bind: SymBind::Global,
              section: SymBase::Index(26) },
    SymData { name: Some("optind"), value: 0x20e108, size: 4,
              kind: SymKind::Object, bind: SymBind::Global,
              section: SymBase::Index(26) },
];

const RELA_DYN_NUM_RELS: usize = 6;

const RELA_DYN_RELS_CONTENTS_X86: [X86_64Reloc<SymData<&'static str, u16,
                                                       Elf64>>;
                                   RELA_DYN_NUM_RELS] = [
    X86_64Reloc::TPOff { sym: SymData { name: Some("_ThreadRuneLocale"),
                                        value: 0, size: 0,
                                        kind: SymKind::ThreadLocal,
                                        bind: SymBind::Global,
                                        section: SymBase::Undef },
                         offset: 0x20a8c0 },
    X86_64Reloc::Copy { sym: SymData { name: Some("__stack_chk_guard"),
                                       value: 0x20e0a0, size: 64,
                                       kind: SymKind::Object,
                                       bind: SymBind::Global,
                                       section: SymBase::Index(26) } },
    X86_64Reloc::Copy { sym: SymData { name: Some("__mb_sb_limit"),
                                       value: 0x20e0e0, size: 4,
                                       kind: SymKind::Object,
                                       bind: SymBind::Global,
                                       section: SymBase::Index(26) } },
    X86_64Reloc::Copy { sym: SymData { name: Some("optarg"),
                                       value: 0x20e100, size: 8,
                                       kind: SymKind::Object,
                                       bind: SymBind::Global,
                                       section: SymBase::Index(26) } },
    X86_64Reloc::Copy { sym: SymData { name: Some("_CurrentRuneLocale"),
                                       value: 0x20e0f0, size: 8,
                                       kind: SymKind::Object,
                                       bind: SymBind::Global,
                                       section: SymBase::Index(26) } },
    X86_64Reloc::Copy { sym: SymData { name: Some("optind"),
                                       value: 0x20e108, size: 4,
                                       kind: SymKind::Object,
                                       bind: SymBind::Global,
                                       section: SymBase::Index(26) } },
];

const RELA_PLT_NUM_RELS: usize = 85;

const RELA_PLT_RELS_CONTENTS_X86: [X86_64Reloc<SymData<&'static str, u16,
                                                       Elf64>>;
                                   RELA_PLT_NUM_RELS] = [
    X86_64Reloc::JumpSlot { sym: SymData { name: Some("atexit"),
                                           value: 0, size: 0,
                                           kind: SymKind::Function,
                                           bind: SymBind::Global,
                                           section: SymBase::Undef },
                            offset: 0x20dd38 },
    X86_64Reloc::JumpSlot { sym: SymData { name: Some("_init_tls"),
                                           value: 0, size: 0,
                                           kind: SymKind::Function,
                                           bind: SymBind::Global,
                                           section: SymBase::Undef },
                            offset: 0x20dd40 },
    X86_64Reloc::JumpSlot { sym: SymData { name: Some("exit"),
                                           value: 0, size: 0,
                                           kind: SymKind::Function,
                                           bind: SymBind::Global,
                                           section: SymBase::Undef },
                            offset: 0x20dd48 },
    X86_64Reloc::JumpSlot { sym: SymData { name: Some("_Jv_RegisterClasses"),
                                           value: 0, size: 0,
                                           kind: SymKind::None,
                                           bind: SymBind::Weak,
                                           section: SymBase::Undef },
                            offset: 0x20dd50 },
    X86_64Reloc::JumpSlot { sym: SymData { name: Some("sysconf"),
                                           value: 0, size: 0,
                                           kind: SymKind::Function,
                                           bind: SymBind::Global,
                                           section: SymBase::Undef },
                            offset: 0x20dd58 },
    X86_64Reloc::JumpSlot { sym: SymData { name: Some("malloc"),
                                           value: 0, size: 0,
                                           kind: SymKind::Function,
                                           bind: SymBind::Global,
                                           section: SymBase::Undef },
                            offset: 0x20dd60 },
    X86_64Reloc::JumpSlot { sym: SymData { name: Some("strlen"),
                                           value: 0, size: 0,
                                           kind: SymKind::Function,
                                           bind: SymBind::Global,
                                           section: SymBase::Undef },
                            offset: 0x20dd68 },
    X86_64Reloc::JumpSlot { sym: SymData { name: Some("strvisx"),
                                           value: 0, size: 0,
                                           kind: SymKind::Function,
                                           bind: SymBind::Global,
                                           section: SymBase::Undef },
                            offset: 0x20dd70 },
    X86_64Reloc::JumpSlot { sym: SymData { name: Some("strrchr"),
                                           value: 0, size: 0,
                                           kind: SymKind::Function,
                                           bind: SymBind::Global,
                                           section: SymBase::Undef },
                            offset: 0x20dd78 },
    X86_64Reloc::JumpSlot { sym: SymData { name: Some("strncmp"),
                                           value: 0, size: 0,
                                           kind: SymKind::Function,
                                           bind: SymBind::Global,
                                           section: SymBase::Undef },
                            offset: 0x20dd80 },
    X86_64Reloc::JumpSlot { sym: SymData { name: Some("sprintf"),
                                           value: 0, size: 0,
                                           kind: SymKind::Function,
                                           bind: SymBind::Global,
                                           section: SymBase::Undef },
                            offset: 0x20dd88 },
    X86_64Reloc::JumpSlot { sym: SymData { name: Some("asprintf"),
                                           value: 0, size: 0,
                                           kind: SymKind::Function,
                                           bind: SymBind::Global,
                                           section: SymBase::Undef },
                            offset: 0x20dd90 },
    X86_64Reloc::JumpSlot { sym: SymData { name: Some("free"),
                                           value: 0, size: 0,
                                           kind: SymKind::Function,
                                           bind: SymBind::Global,
                                           section: SymBase::Undef },
                            offset: 0x20dd98 },
    X86_64Reloc::JumpSlot { sym: SymData { name: Some("strcpy"),
                                           value: 0, size: 0,
                                           kind: SymKind::Function,
                                           bind: SymBind::Global,
                                           section: SymBase::Undef },
                            offset: 0x20dda0 },
    X86_64Reloc::JumpSlot { sym: SymData { name: Some("__stack_chk_fail"),
                                           value: 0, size: 0,
                                           kind: SymKind::Function,
                                           bind: SymBind::Global,
                                           section: SymBase::Undef },
                            offset: 0x20dda8 },
    X86_64Reloc::JumpSlot { sym: SymData { name: Some("errx"),
                                           value: 0, size: 0,
                                           kind: SymKind::Function,
                                           bind: SymBind::Global,
                                           section: SymBase::Undef },
                            offset: 0x20ddb0 },
    X86_64Reloc::JumpSlot { sym: SymData { name: Some("xo_open_list"),
                                           value: 0, size: 0,
                                           kind: SymKind::Function,
                                           bind: SymBind::Global,
                                           section: SymBase::Undef },
                            offset: 0x20ddb8 },
    X86_64Reloc::JumpSlot { sym: SymData { name: Some("xo_emit"),
                                           value: 0, size: 0,
                                           kind: SymKind::Function,
                                           bind: SymBind::Global,
                                           section: SymBase::Undef },
                            offset: 0x20ddc0 },
    X86_64Reloc::JumpSlot { sym: SymData { name: Some("xo_close_list"),
                                           value: 0, size: 0,
                                           kind: SymKind::Function,
                                           bind: SymBind::Global,
                                           section: SymBase::Undef },
                            offset: 0x20ddc8 },
    X86_64Reloc::JumpSlot { sym: SymData { name: Some("xo_finish"),
                                           value: 0, size: 0,
                                           kind: SymKind::Function,
                                           bind: SymBind::Global,
                                           section: SymBase::Undef },
                            offset: 0x20ddd0 },
    X86_64Reloc::JumpSlot { sym: SymData { name: Some("strdup"),
                                           value: 0, size: 0,
                                           kind: SymKind::Function,
                                           bind: SymBind::Global,
                                           section: SymBase::Undef },
                            offset: 0x20ddd8 },
    X86_64Reloc::JumpSlot { sym: SymData { name: Some("warnx"),
                                           value: 0, size: 0,
                                           kind: SymKind::Function,
                                           bind: SymBind::Global,
                                           section: SymBase::Undef },
                            offset: 0x20dde0 },
    X86_64Reloc::JumpSlot { sym: SymData { name: Some("strcspn"),
                                           value: 0, size: 0,
                                           kind: SymKind::Function,
                                           bind: SymBind::Global,
                                           section: SymBase::Undef },
                            offset: 0x20dde8 },
    X86_64Reloc::JumpSlot { sym: SymData { name: Some("strsep"),
                                           value: 0, size: 0,
                                           kind: SymKind::Function,
                                           bind: SymBind::Global,
                                           section: SymBase::Undef },
                            offset: 0x20ddf0 },
    X86_64Reloc::JumpSlot { sym: SymData { name: Some("strchr"),
                                           value: 0, size: 0,
                                           kind: SymKind::Function,
                                           bind: SymBind::Global,
                                           section: SymBase::Undef },
                            offset: 0x20ddf8 },
    X86_64Reloc::JumpSlot { sym: SymData { name: Some("bsearch"),
                                           value: 0, size: 0,
                                           kind: SymKind::Function,
                                           bind: SymBind::Global,
                                           section: SymBase::Undef },
                            offset: 0x20de00 },
    X86_64Reloc::JumpSlot { sym: SymData { name: Some("snprintf"),
                                           value: 0, size: 0,
                                           kind: SymKind::Function,
                                           bind: SymBind::Global,
                                           section: SymBase::Undef },
                            offset: 0x20de08 },
    X86_64Reloc::JumpSlot { sym: SymData { name: Some("strcmp"),
                                           value: 0, size: 0,
                                           kind: SymKind::Function,
                                           bind: SymBind::Global,
                                           section: SymBase::Undef },
                            offset: 0x20de10 },
    X86_64Reloc::JumpSlot { sym: SymData { name: Some("sysctlbyname"),
                                           value: 0, size: 0,
                                           kind: SymKind::Function,
                                           bind: SymBind::Global,
                                           section: SymBase::Undef },
                            offset: 0x20de18 },
    X86_64Reloc::JumpSlot { sym: SymData { name: Some("strvis"),
                                           value: 0, size: 0,
                                           kind: SymKind::Function,
                                           bind: SymBind::Global,
                                           section: SymBase::Undef },
                            offset: 0x20de20 },
    X86_64Reloc::JumpSlot { sym: SymData { name: Some("xo_errx"),
                                           value: 0, size: 0,
                                           kind: SymKind::Function,
                                           bind: SymBind::Global,
                                           section: SymBase::Undef },
                            offset: 0x20de28 },
    X86_64Reloc::JumpSlot { sym: SymData { name: Some("user_from_uid"),
                                           value: 0, size: 0,
                                           kind: SymKind::Function,
                                           bind: SymBind::Global,
                                           section: SymBase::Undef },
                            offset: 0x20de30 },
    X86_64Reloc::JumpSlot { sym: SymData { name: Some("group_from_gid"),
                                           value: 0, size: 0,
                                           kind: SymKind::Function,
                                           bind: SymBind::Global,
                                           section: SymBase::Undef },
                            offset: 0x20de38 },
    X86_64Reloc::JumpSlot { sym: SymData { name: Some("devname"),
                                           value: 0, size: 0,
                                           kind: SymKind::Function,
                                           bind: SymBind::Global,
                                           section: SymBase::Undef },
                            offset: 0x20de40 },
    X86_64Reloc::JumpSlot { sym: SymData { name: Some("localtime"),
                                           value: 0, size: 0,
                                           kind: SymKind::Function,
                                           bind: SymBind::Global,
                                           section: SymBase::Undef },
                            offset: 0x20de48 },
    X86_64Reloc::JumpSlot { sym: SymData { name: Some("strftime"),
                                           value: 0, size: 0,
                                           kind: SymKind::Function,
                                           bind: SymBind::Global,
                                           section: SymBase::Undef },
                            offset: 0x20de50 },
    X86_64Reloc::JumpSlot { sym: SymData { name: Some("localeconv"),
                                           value: 0, size: 0,
                                           kind: SymKind::Function,
                                           bind: SymBind::Global,
                                           section: SymBase::Undef },
                            offset: 0x20de58 },
    X86_64Reloc::JumpSlot { sym: SymData { name: Some("log"),
                                           value: 0, size: 0,
                                           kind: SymKind::Function,
                                           bind: SymBind::Global,
                                           section: SymBase::Undef },
                            offset: 0x20de60 },
    X86_64Reloc::JumpSlot { sym: SymData { name: Some("exp"),
                                           value: 0, size: 0,
                                           kind: SymKind::Function,
                                           bind: SymBind::Global,
                                           section: SymBase::Undef },
                            offset: 0x20de68 },
    X86_64Reloc::JumpSlot { sym: SymData { name: Some("getpagesize"),
                                           value: 0, size: 0,
                                           kind: SymKind::Function,
                                           bind: SymBind::Global,
                                           section: SymBase::Undef },
                            offset: 0x20de70 },
    X86_64Reloc::JumpSlot {
        sym: SymData { name: Some("mac_prepare_process_label"),
                       value: 0, size: 0, kind: SymKind::Function,
                       bind: SymBind::Global, section: SymBase::Undef },
        offset: 0x20de78 },
    X86_64Reloc::JumpSlot { sym: SymData { name: Some("mac_get_pid"),
                                           value: 0, size: 0,
                                           kind: SymKind::Function,
                                           bind: SymBind::Global,
                                           section: SymBase::Undef },
                            offset: 0x20de80 },
    X86_64Reloc::JumpSlot { sym: SymData { name: Some("mac_to_text"),
                                           value: 0, size: 0,
                                           kind: SymKind::Function,
                                           bind: SymBind::Global,
                                           section: SymBase::Undef },
                            offset: 0x20de88 },
    X86_64Reloc::JumpSlot { sym: SymData { name: Some("mac_free"),
                                           value: 0, size: 0,
                                           kind: SymKind::Function,
                                           bind: SymBind::Global,
                                           section: SymBase::Undef },
                            offset: 0x20de90 },
    X86_64Reloc::JumpSlot { sym: SymData { name: Some("xo_warn"),
                                           value: 0, size: 0,
                                           kind: SymKind::Function,
                                           bind: SymBind::Global,
                                           section: SymBase::Undef },
                            offset: 0x20de98 },
    X86_64Reloc::JumpSlot { sym: SymData { name: Some("jail_getname"),
                                           value: 0, size: 0,
                                           kind: SymKind::Function,
                                           bind: SymBind::Global,
                                           section: SymBase::Undef },
                            offset: 0x20dea0 },
    X86_64Reloc::JumpSlot { sym: SymData { name: Some("setlocale"),
                                           value: 0, size: 0,
                                           kind: SymKind::Function,
                                           bind: SymBind::Global,
                                           section: SymBase::Undef },
                            offset: 0x20dea8 },
    X86_64Reloc::JumpSlot { sym: SymData { name: Some("time"),
                                           value: 0, size: 0,
                                           kind: SymKind::Function,
                                           bind: SymBind::Global,
                                           section: SymBase::Undef },
                            offset: 0x20deb0 },
    X86_64Reloc::JumpSlot { sym: SymData { name: Some("getenv"),
                                           value: 0, size: 0,
                                           kind: SymKind::Function,
                                           bind: SymBind::Global,
                                           section: SymBase::Undef },
                            offset: 0x20deb8 },
    X86_64Reloc::JumpSlot { sym: SymData { name: Some("atoi"),
                                           value: 0, size: 0,
                                           kind: SymKind::Function,
                                           bind: SymBind::Global,
                                           section: SymBase::Undef },
                            offset: 0x20dec0 },
    X86_64Reloc::JumpSlot { sym: SymData { name: Some("ioctl"),
                                           value: 0, size: 0,
                                           kind: SymKind::Function,
                                           bind: SymBind::Global,
                                           section: SymBase::Undef },
                            offset: 0x20dec8 },
    X86_64Reloc::JumpSlot { sym: SymData { name: Some("memchr"),
                                           value: 0, size: 0,
                                           kind: SymKind::Function,
                                           bind: SymBind::Global,
                                           section: SymBase::Undef },
                            offset: 0x20ded0 },
    X86_64Reloc::JumpSlot { sym: SymData { name: Some("memcpy"),
                                           value: 0, size: 0,
                                           kind: SymKind::Function,
                                           bind: SymBind::Global,
                                           section: SymBase::Undef },
                            offset: 0x20ded8 },
    X86_64Reloc::JumpSlot { sym: SymData { name: Some("xo_parse_args"),
                                           value: 0, size: 0,
                                           kind: SymKind::Function,
                                           bind: SymBind::Global,
                                           section: SymBase::Undef },
                            offset: 0x20dee0 },
    X86_64Reloc::JumpSlot { sym: SymData { name: Some("getopt"),
                                           value: 0, size: 0,
                                           kind: SymKind::Function,
                                           bind: SymBind::Global,
                                           section: SymBase::Undef },
                            offset: 0x20dee8 },
    X86_64Reloc::JumpSlot { sym: SymData { name: Some("ttyname"),
                                           value: 0, size: 0,
                                           kind: SymKind::Function,
                                           bind: SymBind::Global,
                                           section: SymBase::Undef },
                            offset: 0x20def0 },
    X86_64Reloc::JumpSlot { sym: SymData { name: Some("getuid"),
                                           value: 0, size: 0,
                                           kind: SymKind::Function,
                                           bind: SymBind::Global,
                                           section: SymBase::Undef },
                            offset: 0x20def8 },
    X86_64Reloc::JumpSlot { sym: SymData { name: Some("getgid"),
                                           value: 0, size: 0,
                                           kind: SymKind::Function,
                                           bind: SymBind::Global,
                                           section: SymBase::Undef },
                            offset: 0x20df00 },
    X86_64Reloc::JumpSlot { sym: SymData { name: Some("kvm_openfiles"),
                                           value: 0, size: 0,
                                           kind: SymKind::Function,
                                           bind: SymBind::Global,
                                           section: SymBase::Undef },
                            offset: 0x20df08 },
    X86_64Reloc::JumpSlot { sym: SymData { name: Some("kvm_getprocs"),
                                           value: 0, size: 0,
                                           kind: SymKind::Function,
                                           bind: SymBind::Global,
                                           section: SymBase::Undef },
                            offset: 0x20df10 },
    X86_64Reloc::JumpSlot { sym: SymData { name: Some("realloc"),
                                           value: 0, size: 0,
                                           kind: SymKind::Function,
                                           bind: SymBind::Global,
                                           section: SymBase::Undef },
                            offset: 0x20df18 },
    X86_64Reloc::JumpSlot { sym: SymData { name: Some("kvm_getargv"),
                                           value: 0, size: 0,
                                           kind: SymKind::Function,
                                           bind: SymBind::Global,
                                           section: SymBase::Undef },
                            offset: 0x20df20 },
    X86_64Reloc::JumpSlot { sym: SymData { name: Some("kvm_getenvv"),
                                           value: 0, size: 0,
                                           kind: SymKind::Function,
                                           bind: SymBind::Global,
                                           section: SymBase::Undef },
                            offset: 0x20df28 },
    X86_64Reloc::JumpSlot { sym: SymData { name: Some("qsort"),
                                           value: 0, size: 0,
                                           kind: SymKind::Function,
                                           bind: SymBind::Global,
                                           section: SymBase::Undef },
                            offset: 0x20df30 },
    X86_64Reloc::JumpSlot { sym: SymData { name: Some("memmove"),
                                           value: 0, size: 0,
                                           kind: SymKind::Function,
                                           bind: SymBind::Global,
                                           section: SymBase::Undef },
                            offset: 0x20df38 },
    X86_64Reloc::JumpSlot { sym: SymData { name: Some("__error"),
                                           value: 0, size: 0,
                                           kind: SymKind::Function,
                                           bind: SymBind::Global,
                                           section: SymBase::Undef },
                            offset: 0x20df40 },
    X86_64Reloc::JumpSlot { sym: SymData { name: Some("kvm_geterr"),
                                           value: 0, size: 0,
                                           kind: SymKind::Function,
                                           bind: SymBind::Global,
                                           section: SymBase::Undef },
                            offset: 0x20df48 },
    X86_64Reloc::JumpSlot { sym: SymData { name: Some("memset"),
                                           value: 0, size: 0,
                                           kind: SymKind::Function,
                                           bind: SymBind::Global,
                                           section: SymBase::Undef },
                            offset: 0x20df50 },
    X86_64Reloc::JumpSlot { sym: SymData { name: Some("xo_open_container"),
                                           value: 0, size: 0,
                                           kind: SymKind::Function,
                                           bind: SymBind::Global,
                                           section: SymBase::Undef },
                            offset: 0x20df58 },
    X86_64Reloc::JumpSlot { sym: SymData { name: Some("xo_get_style"),
                                           value: 0, size: 0,
                                           kind: SymKind::Function,
                                           bind: SymBind::Global,
                                           section: SymBase::Undef },
                            offset: 0x20df60 },
    X86_64Reloc::JumpSlot { sym: SymData { name: Some("xo_open_instance"),
                                           value: 0, size: 0,
                                           kind: SymKind::Function,
                                           bind: SymBind::Global,
                                        section: SymBase::Undef },
                            offset: 0x20df68 },
    X86_64Reloc::JumpSlot { sym: SymData { name: Some("xo_close_instance"),
                                           value: 0, size: 0,
                                           kind: SymKind::Function,
                                           bind: SymBind::Global,
                                           section: SymBase::Undef },
                            offset: 0x20df70 },
    X86_64Reloc::JumpSlot { sym: SymData { name: Some("xo_close_container"),
                                           value: 0, size: 0,
                                           kind: SymKind::Function,
                                           bind: SymBind::Global,
                                           section: SymBase::Undef },
                            offset: 0x20df78 },
    X86_64Reloc::JumpSlot { sym: SymData { name: Some("xo_warnx"),
                                           value: 0, size: 0,
                                           kind: SymKind::Function,
                                           bind: SymBind::Global,
                                           section: SymBase::Undef },
                            offset: 0x20df80 },
    X86_64Reloc::JumpSlot { sym: SymData { name: Some("strtoul"),
                                           value: 0, size: 0,
                                           kind: SymKind::Function,
                                           bind: SymBind::Global,
                                           section: SymBase::Undef },
                            offset: 0x20df88 },
    X86_64Reloc::JumpSlot { sym: SymData { name: Some("getgrnam"),
                                           value: 0, size: 0,
                                           kind: SymKind::Function,
                                           bind: SymBind::Global,
                                           section: SymBase::Undef },
                            offset: 0x20df90 },
    X86_64Reloc::JumpSlot { sym: SymData { name: Some("getgrgid"),
                                           value: 0, size: 0,
                                           kind: SymKind::Function,
                                           bind: SymBind::Global,
                                           section: SymBase::Undef },
                            offset: 0x20df98 },
    X86_64Reloc::JumpSlot { sym: SymData { name: Some("jail_getid"),
                                           value: 0, size: 0,
                                           kind: SymKind::Function,
                                           bind: SymBind::Global,
                                           section: SymBase::Undef },
                            offset: 0x20dfa0 },
    X86_64Reloc::JumpSlot { sym: SymData { name: Some("strtol"),
                                           value: 0, size: 0,
                                           kind: SymKind::Function,
                                           bind: SymBind::Global,
                                           section: SymBase::Undef },
                            offset: 0x20dfa8 },
    X86_64Reloc::JumpSlot { sym: SymData { name: Some("getpwnam"),
                                           value: 0, size: 0,
                                           kind: SymKind::Function,
                                           bind: SymBind::Global,
                                           section: SymBase::Undef },
                            offset: 0x20dfb0 },
    X86_64Reloc::JumpSlot { sym: SymData { name: Some("getpwuid"),
                                           value: 0, size: 0,
                                           kind: SymKind::Function,
                                           bind: SymBind::Global,
                                           section: SymBase::Undef },
                            offset: 0x20dfb8 },
    X86_64Reloc::JumpSlot { sym: SymData { name: Some("strlcpy"),
                                           value: 0, size: 0,
                                           kind: SymKind::Function,
                                           bind: SymBind::Global,
                                           section: SymBase::Undef },
                            offset: 0x20dfc0 },
    X86_64Reloc::JumpSlot { sym: SymData { name: Some("strlcat"),
                                           value: 0, size: 0,
                                           kind: SymKind::Function,
                                           bind: SymBind::Global,
                                           section: SymBase::Undef },
                            offset: 0x20dfc8 },
    X86_64Reloc::JumpSlot { sym: SymData { name: Some("stat"),
                                           value: 0, size: 0,
                                           kind: SymKind::Function,
                                           bind: SymBind::Global,
                                           section: SymBase::Undef },
                            offset: 0x20dfd0 },
    X86_64Reloc::JumpSlot { sym: SymData { name: Some("xo_error"),
                                           value: 0, size: 0,
                                           kind: SymKind::Function,
                                           bind: SymBind::Global,
                                           section: SymBase::Undef },
                            offset: 0x20dfd8 }
];

const SHSTRTAB_NUM_STRS: usize = 31;

pub const SHSTRTAB_CONTENTS: [(&'static str, usize); SHSTRTAB_NUM_STRS] = [
    ("", 0),
    ("", 1),
    (".shstrtab", 2),
    (".interp", 12),
    (".note.tag", 20),
    (".dynsym", 30),
    (".gnu.version", 38),
    (".gnu.version_r", 51),
    (".gnu.hash", 66),
    (".hash", 76),
    (".dynstr", 82),
    (".rela.dyn", 90),
    (".rela.plt", 100),
    (".rodata", 110),
    (".eh_frame_hdr", 118),
    (".eh_frame", 132),
    (".text", 142),
    (".init", 148),
    (".fini", 154),
    (".plt", 160),
    (".ctors", 165),
    (".dtors", 172),
    (".jcr", 179),
    (".init_array", 184),
    (".dynamic", 196),
    (".got", 205),
    (".data", 210),
    (".got.plt", 216),
    (".bss", 225),
    (".comment", 230),
    (".gnu_debuglink", 239),
];


pub const STRTAB_CONTENTS: [(&'static str, usize); STRTAB_NUM_STRS] = [
    ("", 0),
    ("__progname", 1),
    ("_init_tls", 12),
    ("atexit", 22),
    ("environ", 29),
    ("exit", 37),
    ("_Jv_RegisterClasses", 42),
    ("__stack_chk_fail", 62),
    ("__stack_chk_guard", 79),
    ("asprintf", 97),
    ("errx", 106),
    ("free", 111),
    ("malloc", 116),
    ("sprintf", 123),
    ("strcpy", 131),
    ("strlen", 138),
    ("strncmp", 145),
    ("strrchr", 153),
    ("strvisx", 161),
    ("sysconf", 169),
    ("bsearch", 177),
    ("snprintf", 185),
    ("strchr", 194),
    ("strcmp", 201),
    ("strcspn", 208),
    ("strdup", 216),
    ("strsep", 223),
    ("uname", 230),
    ("warnx", 236),
    ("xo_close_list", 242),
    ("xo_emit", 256),
    ("xo_finish", 264),
    ("xo_open_list", 274),
    ("sysctlbyname", 287),
    ("devname", 300),
    ("exp", 308),
    ("getpagesize", 312),
    ("group_from_gid", 324),
    ("jail_getname", 339),
    ("localeconv", 352),
    ("localtime", 363),
    ("log", 373),
    ("mac_free", 377),
    ("mac_get_pid", 386),
    ("mac_prepare_process_label", 398),
    ("mac_to_text", 424),
    ("strftime", 436),
    ("strvis", 445),
    ("user_from_uid", 452),
    ("xo_errx", 466),
    ("xo_warn", 474),
    ("_CurrentRuneLocale", 482),
    ("_ThreadRuneLocale", 501),
    ("__error", 519),
    ("__mb_sb_limit", 527),
    ("atoi", 541),
    ("getenv", 546),
    ("getgid", 553),
    ("getgrgid", 560),
    ("getgrnam", 569),
    ("getopt", 578),
    ("getpwnam", 585),
    ("getpwuid", 594),
    ("getuid", 603),
    ("ioctl", 610),
    ("jail_getid", 616),
    ("kvm_getargv", 627),
    ("kvm_getenvv", 639),
    ("kvm_geterr", 651),
    ("kvm_getprocs", 662),
    ("kvm_openfiles", 675),
    ("memchr", 689),
    ("memcpy", 696),
    ("memmove", 703),
    ("memset", 711),
    ("optarg", 718),
    ("optind", 725),
    ("qsort", 732),
    ("realloc", 738),
    ("setlocale", 746),
    ("stat", 756),
    ("strlcat", 761),
    ("strlcpy", 769),
    ("strtol", 777),
    ("strtoul", 784),
    ("time", 792),
    ("ttyname", 797),
    ("xo_close_container", 805),
    ("xo_close_instance", 824),
    ("xo_error", 842),
    ("xo_get_style", 851),
    ("xo_open_container", 864),
    ("xo_open_instance", 882),
    ("xo_parse_args", 899),
    ("xo_warnx", 913),
    ("libm.so.5", 922),
    ("FBSD_1.0", 932),
    ("libc.so.7", 941),
    ("FBSD_1.3", 951),
    ("FBSD_1.5", 960),
    ("libkvm.so.7", 969),
    ("libjail.so.1", 981),
    ("libxo.so.0", 994),
];

const STRTAB_NUM_STRS: usize = 103;

const NUM_DYNAMIC_ENTS: usize = 28;

const DYNAMIC_ENTS: [DynamicEntData<&'static str, u64, Elf64>;
                     NUM_DYNAMIC_ENTS] = [
    DynamicEntData::Needed { name: "libm.so.5" },
    DynamicEntData::Needed { name: "libkvm.so.7" },
    DynamicEntData::Needed { name: "libjail.so.1" },
    DynamicEntData::Needed { name: "libxo.so.0" },
    DynamicEntData::Needed { name: "libc.so.7" },
    DynamicEntData::Flags { flags: 0x10 },
    DynamicEntData::Debug { tab: 0 },
    DynamicEntData::Rela { tab: 0x201448 },
    DynamicEntData::RelaSize { size: 144 },
    DynamicEntData::RelaEntSize { size: 24 },
    DynamicEntData::JumpRel { tab: 0x2014d8 },
    DynamicEntData::PLTRelSize { size: 2040 },
    DynamicEntData::PLTGOT { tab: 0x20dd20 },
    DynamicEntData::PLTRela { rela: true },
    DynamicEntData::Symtab { tab: 0x200308 },
    DynamicEntData::SymtabEntSize { size: 24 },
    DynamicEntData::Strtab { tab: 0x201058 },
    DynamicEntData::StrtabSize { size: 1005 },
    DynamicEntData::Unknown { tag: 0x6ffffef5, info: 0x200d10 },
    DynamicEntData::Hash { tab: 0x200d58 },
    DynamicEntData::InitArray { arr: 0x20a6f8 },
    DynamicEntData::InitArraySize { size: 8 },
    DynamicEntData::Init { func: 0x20914c },
    DynamicEntData::Fini { func: 0x20915c },
    DynamicEntData::Unknown { tag: 0x6ffffff0, info: 0x200bf0 },
    DynamicEntData::Unknown { tag: 0x6ffffffe, info: 0x200cb0 },
    DynamicEntData::Unknown { tag: 0x6fffffff, info: 2 },
    DynamicEntData::None
];

pub const EXPECTED: [SectionHdrData<Elf64, &'static str,
                                    u32,
                                    SymsStrs<&'static [SymData<&'static str,
                                                               u16, Elf64>],
                                             &'static [(&'static str, usize)]>,
                                    &'static [(&'static str, usize)],
                                    SectionPos<u64>,
                                    &'static [SymData<&'static str,
                                                      u16, Elf64>],
                                    &'static [(&'static str, usize)],
                                    &'static [X86_64Reloc<SymData<&'static str,
                                                                  u16, Elf64>>],
                                    &'static [X86_64Reloc<SymData<&'static str,
                                                                  u16, Elf64>>],
                                    SectionPos<u64>,
                                    &'static [DynamicEntData<&'static str,
                                                             u64, Elf64>],
                                    &'static [NoteData<'static>]>;
                     NUM_SECTION_HDRS] = [
    SectionHdrData::Null,
    SectionHdrData::ProgBits { name: ".interp", addr: 0x2002a8, align: 1,
                               data: SectionPos { offset: 0x2a8, size: 0x15 },
                               alloc: false, write: false, exec: false },
    SectionHdrData::Note { name: ".note.tag", addr: 0x2002c0, align: 4,
                           note: &NOTES_CONTENTS, alloc: true, write: false,
                           exec: false },
    SectionHdrData::Dynsym { name: ".dynsym", addr: 0x200308, align: 8,
                             syms: &DYNSYM_CONTENTS, strtab: &STRTAB_CONTENTS,
                             local_end: 1, alloc: true, write: false,
                             exec: false },
    SectionHdrData::Unknown { name: ".gnu.version", tag: 0x6fffffff,
                              addr: 0x200bf0, align: 2, offset: 0xbf0,
                              size: 0xbe, ent_size: 2, link: 3, info: 0,
                              flags: 0x2 },
    SectionHdrData::Unknown { name: ".gnu.version_d", tag: 0x6ffffffd,
                              addr: 0x200cb0, align: 4, offset: 0xcb0,
                              size: 0x60, ent_size: 0, link: 8, info: 2,
                              flags: 0x2 },
    SectionHdrData::Unknown { name: ".gnu.hash", tag: 0x6ffffff6,
                              addr: 0x200b10, align: 8, offset: 0xb10,
                              size: 0x48, ent_size: 0, link: 3, info: 0,
                              flags: 0x2 },
    SectionHdrData::Hash { name: ".hash", addr: 0x200d58, align: 4,
                           hash: SectionPos { offset: 0xd58, size: 0x300 },
                           symtab: SymsStrs { syms: &DYNSYM_CONTENTS,
                                              strs: &STRTAB_CONTENTS },
                           alloc: true, write: false, exec: false },
    SectionHdrData::Strtab { name: ".dynstr", addr: 0x201058, align: 1,
                             strs: &STRTAB_CONTENTS },
    SectionHdrData::Rela { name: ".rela.dyn", addr: 0x201448, align: 8,
                           relas: &RELA_DYN_RELS_CONTENTS_X86,
                           symtab: SymsStrs { syms: &DYNSYM_CONTENTS,
                                              strs: &STRTAB_CONTENTS },
                           target: 0, alloc: true, write: false, exec: false },
    SectionHdrData::Rela { name: ".rela.plt", addr: 0x2014d8, align: 8,
                           relas: &RELA_PLT_RELS_CONTENTS_X86,
                           symtab: SymsStrs { syms: &DYNSYM_CONTENTS,
                                              strs: &STRTAB_CONTENTS },
                           target: 0, alloc: true, write: false, exec: false },
    SectionHdrData::ProgBits { name: ".rodata", addr: 0x201cd0, align: 16,
                               data: SectionPos { offset: 0x1cd0,
                                                  size: 0x11d0 },
                               alloc: true, write: false, exec: false },
    SectionHdrData::ProgBits { name: ".eh_frame_hdr", addr: 0x202ea0, align: 4,
                               data: SectionPos { offset: 0x2ea0, size: 0x1d4 },
                               alloc: true, write: false, exec: false },
    SectionHdrData::ProgBits { name: ".eh_frame", addr: 0x203078, align: 8,
                               data: SectionPos { offset: 0x3078, size: 0x93c },
                               alloc: true, write: false, exec: false },
    SectionHdrData::ProgBits { name: ".text", addr: 0x2049c0, align: 16,
                               data: SectionPos { offset: 0x39c0,
                                                  size: 0x478c },
                               alloc: true, write: false, exec: true },
    SectionHdrData::ProgBits { name: ".init", addr: 0x20914c, align: 4,
                               data: SectionPos { offset: 0x814c, size: 0xe },
                               alloc: true, write: false, exec: true },
    SectionHdrData::ProgBits { name: ".fini", addr: 0x20915c, align: 4,
                               data: SectionPos { offset: 0x814c, size: 0xe },
                               alloc: true, write: false, exec: true },
    SectionHdrData::ProgBits { name: ".plt", addr: 0x209170, align: 16,
                               data: SectionPos { offset: 0x8170, size: 0x560 },
                               alloc: true, write: false, exec: true },
    SectionHdrData::ProgBits { name: ".ctors", addr: 0x20a6d0, align: 8,
                               data: SectionPos { offset: 0xa6d0, size: 0x10 },
                               alloc: true, write: false, exec: true },
    SectionHdrData::ProgBits { name: ".dtors", addr: 0x20a6e0, align: 8,
                               data: SectionPos { offset: 0x86e0, size: 0x10 },
                               alloc: true, write: true, exec: false },
    SectionHdrData::ProgBits { name: ".jcr", addr: 0x20a6f0, align: 16,
                               data: SectionPos { offset: 0x86f0, size: 0x560 },
                               alloc: true, write: true, exec: false },
    SectionHdrData::Unknown { name: ".fini_array", tag: 15, addr: 0x20a6f8,
                              align: 8, offset: 0x86f8, size: 8, ent_size: 0,
                              link: 0, info: 0, flags: 0x3 },
    SectionHdrData::Dynamic { name: ".dynamic", addr: 0x20a700, align: 8,
                              strtab: &STRTAB_CONTENTS, dynamic: &DYNAMIC_ENTS,
                              alloc: true, write: true, exec: false },
    SectionHdrData::ProgBits { name: ".got", addr: 0x20a8c0, align: 8,
                               data: SectionPos { offset: 0x88c0, size: 0x8 },
                               alloc: true, write: true, exec: false },
    SectionHdrData::ProgBits { name: ".data", addr: 0x20a8d0, align: 16,
                               data: SectionPos { offset: 0x88d0,
                                                  size: 0x244a },
                               alloc: true, write: true, exec: false },
    SectionHdrData::ProgBits { name: ".got.plt", addr: 0x20dd20, align: 8,
                               data: SectionPos { offset: 0xad20, size: 0x2c0 },
                               alloc: true, write: true, exec: false },
    SectionHdrData::Nobits { name: ".bss", addr: 0x20e000, align: 64,
                             offset: 0xafe0, size: 0x10c, alloc: true,
                             write: true, exec: false },
    SectionHdrData::ProgBits { name: ".comment", addr: 0, align: 1,
                               data: SectionPos { offset: 0xafe0, size: 0x4dc },
                               alloc: false, write: false, exec: false },
    SectionHdrData::ProgBits { name: ".gnu_debuglink", addr: 0, align: 1,
                               data: SectionPos { offset: 0xb4bc, size: 0x10 },
                               alloc: false, write: false, exec: false },
    SectionHdrData::Strtab { name: ".shstrtab", addr: 0, align: 1,
                             strs: &SHSTRTAB_CONTENTS }
];
